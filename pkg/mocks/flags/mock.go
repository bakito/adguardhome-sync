// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bakito/adguardhome-sync/pkg/config (interfaces: Flags)
//
// Generated by this command:
//
//	mockgen -package client -destination pkg/mocks/flags/mock.go github.com/bakito/adguardhome-sync/pkg/config Flags
//

// Package client is a generated GoMock package.
package client

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockFlags is a mock of Flags interface.
type MockFlags struct {
	ctrl     *gomock.Controller
	recorder *MockFlagsMockRecorder
	isgomock struct{}
}

// MockFlagsMockRecorder is the mock recorder for MockFlags.
type MockFlagsMockRecorder struct {
	mock *MockFlags
}

// NewMockFlags creates a new mock instance.
func NewMockFlags(ctrl *gomock.Controller) *MockFlags {
	mock := &MockFlags{ctrl: ctrl}
	mock.recorder = &MockFlagsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFlags) EXPECT() *MockFlagsMockRecorder {
	return m.recorder
}

// Changed mocks base method.
func (m *MockFlags) Changed(name string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Changed", name)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Changed indicates an expected call of Changed.
func (mr *MockFlagsMockRecorder) Changed(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Changed", reflect.TypeOf((*MockFlags)(nil).Changed), name)
}

// GetBool mocks base method.
func (m *MockFlags) GetBool(name string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBool", name)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBool indicates an expected call of GetBool.
func (mr *MockFlagsMockRecorder) GetBool(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBool", reflect.TypeOf((*MockFlags)(nil).GetBool), name)
}

// GetInt mocks base method.
func (m *MockFlags) GetInt(name string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInt", name)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInt indicates an expected call of GetInt.
func (mr *MockFlagsMockRecorder) GetInt(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInt", reflect.TypeOf((*MockFlags)(nil).GetInt), name)
}

// GetString mocks base method.
func (m *MockFlags) GetString(name string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetString", name)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetString indicates an expected call of GetString.
func (mr *MockFlagsMockRecorder) GetString(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetString", reflect.TypeOf((*MockFlags)(nil).GetString), name)
}
